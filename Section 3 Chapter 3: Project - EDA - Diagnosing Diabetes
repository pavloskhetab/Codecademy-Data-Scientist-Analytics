EDA: Diagnosing Diabetes
In this project, you’ll imagine you are a data scientist interested in exploring data that looks at 
how certain diagnostic factors affect the diabetes outcome of women patients.

You will use your EDA skills to help inspect, clean, and validate the data.

Note: This dataset is from the National Institute of Diabetes and Digestive and Kidney Diseases. It contains the following columns:

Pregnancies: Number of times pregnant
Glucose: Plasma glucose concentration at 2 hours in an oral glucose tolerance test
BloodPressure: Diastolic blood pressure
SkinThickness: Triceps skinfold thickness
Insulin: 2-Hour serum insulin
BMI: Body mass index
DiabetesPedigreeFunction: Diabetes pedigree function
Age: Age (years)
Outcome: Class variable (0 or 1)
Let’s get started!

Setup Instructions
You have two options of completing this assignment. Either here, within Codecademy’s output terminal, or on your own, 
in case you’re more comfortable using a Jupyter notebook.If you choose to do this project on your computer instead of Codecademy, 
you can download what you’ll need by clicking the “Download” button below. If you need help setting up your computer, be sure to check out our setup guides:

Code:
import codecademylib3
import pandas as pd
import numpy as np

# code goes here
# 1. What do you expect each data type to be for the columns?
'''
Pregnancies
Number of times pregnant 
Expected Data type: int64

Glucose
Plasma glucose concentration a 2 hours in an oral glucose tolerance test
Expected Data type: float64
Actual Data type: int64

BloodPressure
Diastolic blood pressure (mm Hg)
Expected Data type: float64
Actual Data type: int64

SkinThickness
Triceps skin fold thickness (mm)
Expected Data type: float64
Actual Data type: int64

Insulin
2-Hour serum insulin (mu U/ml)
Expected Data type: float64
Actual Data type: int64

BMI
Body mass index (weight in kg/(height in m)^2)
Expected Data type: float64

DiabetesPedigreeFunction
Diabetes pedigree function
Expected Data type: ?
Actual Data type: float64

Age
Age (years)
Expected Data type: int64

Outcome
Class variable (0 or 1) 268 of 768 are 1, the others are 0
Expected Data type: bool
'''

# 2. Load data in variable 'diabetes_data' and print first few rows.
diabetes_data = pd.read_csv('diabetes.csv')

print(diabetes_data.head())

# 3. How many columns(features) does the data contain?
print(len(diabetes_data.columns))

# 4. How many rows(observations) does the data contain?
print(len(diabetes_data))

# 5. Do any of the columns in the data contain null(missing) values?
print(diabetes_data.isnull().sum())

# 6. While the .isnull().sum() indicates none of the columns have null values, it does not mean that the data isn't missing any values. To investigate further, calculate summary statistics on diabetes_data using the .describe() method.
print(diabetes_data.describe())
