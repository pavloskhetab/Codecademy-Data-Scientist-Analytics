In this project, you’ll analyze data from the NBA (National Basketball Association) and explore possible associations.

This data was originally sourced from 538’s Analysis of the Complete History Of The NBA and 
contains the original, unmodified data from Basketball Reference as well as several 
additional variables 538 added to perform their own analysis.

You can read more about the data and how it’s being used by 538 here. 
For this project we’ve limited the data to just 5 teams and 10 columns (plus one constructed column, 
point_diff, the difference between pts and opp_pts).

You will create several charts and tables in this project, so you’ll need to use plt.clf() 
between plots in your code so that the plots don’t layer on top of one another.

Let’s get started!

Setup Instructions
You have two options of completing this assignment. Either here, in the Codecademy Learning Environment, 
or on your own using a Jupyter notebook.

If you choose to do this project on your computer instead of Codecademy, 
you can download what you’ll need by clicking the “Download” button below and then 
opening Codecademy_NBA_Trends_Project.ipynb and checking off your Tasks here. 
If you get stuck, you can look at Codecademy_NBA_Trends_Project_Solution.ipynb.


Analyzing relationships between Quant and Categorical
1. In script.py, the data has been subsetted for you into two smaller datasets: games from 2010 (named nba_2010) and 
games from 2014 (named nba_2014). To start, let’s focus on the 2010 data.

Suppose you want to compare the knicks to the nets with respect to points earned per game. 
Using the pts column from the nba_2010 DataFrame, create two series named knicks_pts_10 (fran_id = "Knicks") and 
nets_pts_10(fran_id = "Nets") that represent the points each team has scored in their games.



2. Calculate the difference between the two teams’ average points scored and save the result as diff_means_2010.
Based on this value, do you think fran_id and pts are associated? Why or why not?


3. Rather than comparing means, it’s useful look at the full distribution of values to understand whether a difference in means is meaningful. 
Create a set of overlapping histograms that can be used to compare the points scored for the Knicks compared to the Nets. 
Use the series you created in the previous step (1) and the code below to create the plot. Do the distributions appear to be the same?


4. Now, let’s compare the 2010 games to 2014. Replicate the steps from the previous three exercises using nba_2014. 
First, calculate the mean difference between the two teams points scored. Save and print the value as diff_means_2014. 
Did the difference in points get larger or smaller in 2014? Then, plot the overlapping histograms. Does the mean difference you calculated make sense?


5. For the remainder of this project, we’ll focus on data from 2010. 
Let’s now include all teams in the dataset and investigate the relationship between franchise and points scored per game.

Using nba_2010, generate side-by-side boxplots with points scored (pts) on the y-axis and team (fran_id) on the x-axis. 
Is there any overlap between the boxes? Does this chart suggest that fran_id and pts are associated? Which pairs of teams, 
if any, earn different average scores per game?


Analyzing relationships between Categorical variables
6. We’d like to know if teams tend to win more games at home compared to away.

The variable game_result indicates whether a team won a particular game ('W' stands for “win” and 'L' stands for “loss”). 
The variable game_location indicates whether a team was playing at home or away ('H' stands for “home” and 'A' stands for “away”).

Data scientists will often calculate a contingency table of frequencies to help them determine if categorical variables are associated. 
Calculate a table of frequencies that shows the counts of game_result and game_location.

Save your result as location_result_freq and print your result. Based on this table, do you think the variables are associated?


7. Convert this table of frequencies to a table of proportions and save the result as location_result_proportions. Print your result.



8. Using the contingency table we created in Task 6 (use the counts – NOT the proportions), 
calculate the expected contingency table (if there were no association) and the Chi-Square statistic and print your results. 
Does the actual contingency table look similar to the expected table — or different? 
Based on this output, do you think there is an association between these variables?


Analyzing Relationships Between Quantitative Variables
9. For each game, 538 has calculated the probability that each team will win the game. 
We want to know if teams with a higher probability of winning (according to 538) also tend to win games by more points.

In the data, 538’s prediction is saved as forecast. The point_diff column gives the margin of victory/defeat for each team 
(positive values mean that the team won; negative values mean that they lost).

Using nba_2010, calculate the covariance between forecast (538’s projected win probability) and point_diff (the margin of victory/defeat) in the dataset. 
Call this point_diff_forecast_cov. Save and print your result. Looking at the matrix, what is the covariance between these two variables?


10. Because 538’s forecast variable is reported as a probability (not a binary), we can calculate the strength of the correlation.

Using nba_2010, calculate the correlation between forecast and point_diff. Call this point_diff_forecast_corr. Save and print your result. 
Does this value suggest an association between the two variables?


11. Generate a scatter plot of forecast (on the x-axis) and point_diff (on the y-axis). 
Does the correlation value make sense?

Code:
import numpy as np
import pandas as pd
from scipy.stats import pearsonr, chi2_contingency
import matplotlib.pyplot as plt
import seaborn as sns

import codecademylib3
np.set_printoptions(suppress=True, precision = 2)

nba = pd.read_csv('./nba_games.csv')

# Subset Data to 2010 Season, 2014 Season
nba_2010 = nba[nba.year_id == 2010]
nba_2014 = nba[nba.year_id == 2014]

print(nba_2010.head())
print(nba_2014.head())


# 1. Compare the Knicks with the Nets for points earned in 2010

# Filter for Knicks data in 2010
knicks_pts_2010 = nba_2010.pts[nba.fran_id == "Knicks"]

# Filter for Nets data in 2010
nets_pts_2010 = nba_2010.pts[nba.fran_id == "Nets"]

print("Knicks points in 2010")
print(knicks_pts_2010.head())

print("Nets points in 2010")
print(nets_pts_2010.head())


# 2. Calculate the difference between the two teams' average points and assess whether fran_id and points are associated. Why or why not?

average_points_knicks_2010 = knicks_pts_2010.mean()
average_points_nets_2010 = nets_pts_2010.mean()

diff_means_2010 = average_points_knicks_2010 - average_points_nets_2010

print(diff_means_2010)
# I believe that the means are not likely to be associated due to the low value of 9 but more tests need to be carried out to verify the association.


# 3. Create a set of overlapping histograms to compare the distributions. Do the distributions appear to be the same?
plt.hist(knicks_pts_2010, color = 'blue', label = 'Knicks', normed = True, alpha = 0.8)

plt.hist(nets_pts_2010, color = 'red', label = 'Nets', normed = True, alpha = 0.8)
plt.legend()
plt.title("2010 Season")
plt.show()
plt.close()

# The distributions appear to be similar.


# 4. Now do the same for 2014 games
# Filter for Knicks data in 2014
knicks_pts_2014 = nba_2014.pts[nba.fran_id == "Knicks"]

# Filter for Nets data in 2014
nets_pts_2014 = nba_2014.pts[nba.fran_id == "Nets"]

print("Knicks points in 2014")
print(knicks_pts_2014.head())

print("Nets points in 2014")
print(nets_pts_2014.head())

# Find average of knicks and nets in 2014 
average_points_knicks_2014 = knicks_pts_2014.mean()
average_points_nets_2014 = nets_pts_2014.mean()

diff_means_2014 = average_points_knicks_2014 - average_points_nets_2014

print(diff_means_2014)

# The difference in points in 2014 is smaller than in 2010 going from 9.73 to 0.45.

plt.hist(knicks_pts_2014, label = 'Knicks', normed = True, alpha = 0.8)
plt.hist(nets_pts_2014, label = 'Nets', normed = True, alpha = 0.8)
plt.legend()
plt.title('2014 Season')
plt.show()
plt.close()

# The mean difference doesn't make sense since one distribution is bimodal and could indicate a non-linear relationship.


# 5. For the rest of the project use data from 2010. 
# Investigate the relationship between franchise and points scored per game.
# Use side-by-side box plots to visualise the mean differences to understand if the mean difference is 'large' or 'small'.
sns.boxplot(data = nba_2010, x = 'fran_id', y = 'pts')
plt.show()
plt.close()

# Is there any overlap between the boxes? (View IQR) 
# There exists an overlap in nearly all of the franchises.

# Does this chart suggest that fran_id and pts are associated?
# This chart doesn't really show that fran_id and pts are associated.

# Which pairs of teams, if any, earn different average scores per game?
# Knicks, Thunder, and Spurs against Celtics and Nets have different average scores per game.


# 6. Investigate if teams tend to win more games at home compared to away.
# Calculate a contingency table of frequency to determine if these categorical variables are associated.
location_result_freq = pd.crosstab(nba_2010.game_result, nba_2010.game_location)

print(location_result_freq)
# Based on this contingency table, it seems that the variables are associated since when the teams are away they tend to lose more and win less whereas when they are at home the tend to win more and lose less.


# 7. Convert the table of frequencies into a table of proportions

location_result_proportions = location_result_freq/len(nba_2010)

print(location_result_proportions)


# 8. Calculate the expected contingency table and the Chi-Square statistic to check for association between game_result and game_location.
