TWO QUANTITATIVE VARIABLES

Introduction
When associations exist between variables, it means that information about the value of one variable gives us 
information about the value of the other variable. In this lesson, we will cover ways of examining an association 
between two quantitative variables.

Throughout the next few exercises, we’ll examine some data about Texas housing rentals on Craigslist — an online 
classifieds site. The data dictionary is as follows:

price: monthly rental price in U.S.D.
type: type of housing (eg., 'apartment', 'house', 'condo', etc.)
sqfeet: housing area, in square feet
beds: number of beds
baths: number of baths
lat: latitude
long: longitude
Except for type, all of these variables are quantitative. Which pairs of variables do you think might be associated? 
For example, does knowing something about price give you any information about square footage?

Code:
import pandas as pd
import codecademylib3


housing = pd.read_csv('housing_sample.csv')

#print the first 10 rows of data:
print(housing.head(10))



Scatter Plots
One of the best ways to quickly visualize the relationship between quantitative variables is to 
plot them against each other in a scatter plot. This makes it easy to look for patterns or trends in the data. 
Let’s start by plotting the area of a rental against its monthly price to see if we can spot any patterns.

plt.scatter(x = housing.price, y = housing.sqfeet)
plt.xlabel('Rental Price (USD)')
plt.ylabel('Area (Square Feet)')
plt.show()

This image shows a scatter plot with price on the x-axis and area on the y-axis. 
There is a clear linear relationship; rentals that cost more tend to have larger area.

While there’s a lot of variation in the data, it seems like more expensive housing tends to come with slightly
more space. This suggests an association between these two variables.

It’s important to note that different kinds of associations can lead to different patterns in a scatter plot. 
For example, the following plot shows the relationship between the age of a child in months and their weight in pounds. 
We can see that older children tend to weigh more but that the growth rate starts leveling off after 36 months:

Plot showing the relationship between the age of a child in months and their weight in pounds. 
We can see that older children tend to weigh more but that the growth rate starts leveling off after 36 months

If we don’t see any patterns in a scatter plot, we can probably guess that the variables are not associated. 
For example, a scatter plot like this would suggest no association:

Scatter plot with no apparent pattern; the points appear randomly distributed.

Code:
import pandas as pd
import matplotlib.pyplot as plt 
import codecademylib3

housing = pd.read_csv('housing_sample.csv')

print(housing.head())

#create your scatter plot here:
plt.scatter(x = housing.beds, y = housing.sqfeet)
plt.xlabel('Number of beds')
plt.ylabel('Area (Square Feet)')
plt.show()
plt.close()



Exploring Covariance
Beyond visualizing relationships, we can also use summary statistics to quantify the strength of certain associations. 
Covariance is a summary statistic that describes the strength of a linear relationship. 
A linear relationship is one where a straight line would best describe the pattern of points in a scatter plot.

Covariance can range from negative infinity to positive infinity. A positive covariance indicates that 
a larger value of one variable is associated with a larger value of the other. 
A negative covariance indicates a larger value of one variable is associated with a smaller value of the other. 
A covariance of 0 indicates no linear relationship. Here are some examples:

This figure shows three different plots. In the first, the points are almost exactly along a line with 
a positive slope and the label is "large positive covariance". In the middle plot, the points are randomly 
scattered and the label is "covariance of zero". In the last plot, the points are almost exactly on 
a negatively sloping line and the label is "large negative covariance"

To calculate covariance, we can use the cov() function from NumPy, which produces a covariance matrix 
for two or more variables. A covariance matrix for two variables looks something like this:

variable 1	variable 2
variable 1	variance(variable 1)	covariance
variable 2	covariance	variance(variable 2)
In python, we can calculate this matrix as follows:

cov_mat_price_sqfeet = np.cov(housing.price, housing.sqfeet)
print(cov_mat_price_sqfeet)
#output: 
[[184332.9  57336.2]
 [ 57336.2 122045.2]]

Notice that the covariance appears twice in this matrix and is equal to 57336.2.

Code:
import numpy as np
import pandas as pd
np.set_printoptions(suppress=True, precision = 1) 

housing = pd.read_csv('housing_sample.csv')

# calculate and print covariance matrix:
cov_mat_sqfeet_beds = np.cov(housing.sqfeet, housing.beds)
print(cov_mat_sqfeet_beds)

# store the covariance as cov_sqfeet_beds
cov_sqfeet_beds = 228.2



Correlation- Part 1
Like covariance, Pearson Correlation (often referred to simply as “correlation”) is a scaled form of covariance. 
It also measures the strength of a linear relationship, but ranges from -1 to +1, making it more interpretable.

Highly associated variables with a positive linear relationship will have a correlation close to 1. 
Highly associated variables with a negative linear relationship will have a correlation close to -1. 
Variables that do not have a linear association (or a linear association with a slope of zero) will have correlations close to 0.

This figure shows 5 different plots. From left to right, the plots show a correlation of 1, a large positive correlation, no correlation, 
a large negative correlation, and a correlation of -1.)

The pearsonr() function from scipy.stats can be used to calculate correlation as follows:

from scipy.stats import pearsonr
corr_price_sqfeet, p = pearsonr(housing.price, housing.sqfeet)
print(corr_price_sqfeet) #output: 0.507

Generally, a correlation larger than about .3 indicates a linear association. 
A correlation greater than about .6 suggestions a strong linear association.

Code:
import pandas as pd
import matplotlib.pyplot as plt 
import codecademylib3
from scipy.stats import pearsonr

housing = pd.read_csv('housing_sample.csv')

# calculate corr_sqfeet_beds and print it out:
corr_sqfeet_beds, p = pearsonr(housing.sqfeet, housing.beds)
print(corr_sqfeet_beds)

# create the scatter plot here:
plt.scatter(x = housing.beds, y = housing.sqfeet)
plt.xlabel('Number of Beds')
plt.ylabel('Area (Square Feet)')
plt.show()
plt.close



Correlation Part 2
It’s important to note that there are some limitations to using correlation or covariance as a way of assessing 
whether there is an association between two variables. Because correlation and covariance both measure 
the strength of linear relationships with non-zero slopes, but not other kinds of relationships, correlation can be misleading.

For example, the four scatter plots below all show pairs of variables with near-zero correlations. 
The bottom left image shows an example of a perfect linear association where the slope is zero (the line is horizontal). 
Meanwhile, the other three plots show non-linear relationships — if we drew a line through any of these sets of points, 
that line would need to be curved, not straight!

This figure shows four different scatter plots where the correlation is equal to zero in every case. 
The bottom left image shows an example of a perfect linear association where the slope is zero (the line is horizontal). 
Meanwhile, the other three plots show non-linear relationships, where the points follow a curved pattern.

Code:
import pandas as pd
import matplotlib.pyplot as plt 
import codecademylib3
from scipy.stats import pearsonr

sleep = pd.read_csv('sleep_performance.csv')

print(sleep.head())

# create your scatter plot here:
x = sleep.hours_sleep
y = sleep.performance
plt.scatter(x, y)
plt.xlabel('Hours slept')
plt.ylabel('Performance on task')
plt.show()
plt.close()

# calculate the correlation for `hours_sleep` and `performance`:
corr_sleep_performance, p = pearsonr(x,y)
print(corr_sleep_performance)



Review
In this lesson we discussed several ways of examining an association between two quantitative variables. 
More specifically, we:

Used scatter plots to examine relationships between quantitative variables
Used covariance and correlation to quantify the strength of a linear relationship between two quantitative variables
Note that the dataset used in this lesson was downloaded from kaggle.

Instructions
As a final exercise, a new dataset named penguins has been uploaded for you in script.py. 
This dataset contains various measurements for a sample of penguins. To practice the skills learned in this lesson, 
here are some things to try:

Inspect the first few rows of data.
Create a scatter plot of flipper length (flipper_length_mm) and body mass (body_mass_g).
Inspect your plot. What is the relationship between these variables?
Calculate the covariance for these two variables.
Calculate the correlation for these two variables. Does this number make sense given the plot you created?
Solution code is available to you in solution.py if you want to compare your work.

Code:
